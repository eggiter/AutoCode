<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${groupId}.${artifactId}.dao.${tableNameUpperCase}Dao">

    <!--Automatically generated, please do NOT edit! -->
    <!-- ${databaseName}.${tableName} all columns -->
    <sql id="SQL_COLUMN_LIST">
        <![CDATA[
#foreach($column in ${columns})
            ${column.columnName} AS ${column.columnNameLowerCase}#if($velocityCount != ${columns.size()}),#end  /* ${column.columnComment} */
#end
        ]]>
    </sql>

    <!-- from cause -->
    <sql id="SQL_FROM_CAUSE">
        <![CDATA[
        FROM ${tableName}
        ]]>
    </sql>

    <!-- where cause -->
    <sql id="SQL_WHERE_CAULSE">
        <where>
#foreach($column in $columns)
          <if test="${column.columnNameLowerCase} != null#if(${column.javaType} == "String") and ${column.columnNameLowerCase} != ''#end">
              <![CDATA[AND ${column.columnName} = #{${column.columnNameLowerCase}}]]> /* ${column.columnComment} */
          </if>
#end
          <if test="extraMap != null">
#foreach($column in $columns)
#if(${column.queryLike} == "YES")
              <if test="extraMap.${column.columnNameLowerCase}Like != null and extraMap.${column.columnNameLowerCase}Like != ''">
                  <![CDATA[AND ${column.columnName} LIKE concat('%', #{${column.columnNameLowerCase}Like}, '%')]]>  /* ${column.columnComment}*/
              </if>
#end
#end
#foreach($column in $columns)
#if(${column.queryTimeBetween} == "YES")
              <if test="extraMap.${column.columnNameLowerCase}Begin != null and extraMap.${column.columnNameLowerCase}Begin != ''">
                  <![CDATA[AND ${column.columnName} >= STR_TO_DATE(#{extraMap.${column.columnNameLowerCase}Begin},'%Y-%m-%d')]]>  /* ${column.columnComment}*/
              </if>
              <if test="extraMap.${column.columnNameLowerCase}End != null and extraMap.${column.columnNameLowerCase}End != ''">
                  <![CDATA[AND ${column.columnName} <= STR_TO_DATE(#{extraMap.${column.columnNameLowerCase}End},'%Y-%m-%d')]]>  /* ${column.columnComment}*/
              </if>
#end
#end
          </if>
        </where>
    </sql>

    <!-- update cause -->
    <sql id="SQL_UPDATE_COLUMNS">
        <set>
#foreach($column in $columns)
            <if test="${column.columnNameLowerCase} != null">
                <![CDATA[${column.columnName} = #{${column.columnNameLowerCase}}]]>  /* ${column.columnComment} */,
            </if>
#end
        </set>
    </sql>

    <!-- order by cause -->
    <sql id="SQL_ORDERBY_CAUSE">
        <if test="orderBy != null and orderBy != ''">
            <![CDATA[ORDER BY ${orderBy} ${order}]]>
        </if>
        <if test="offset != null">
            <![CDATA[LIMIT #{offset}, #{limit}]]>
        </if>
    </sql>

    <!-- insert new entry -->
    <insert id="insertEntry" parameterType="${groupId}.${artifactId}.bean.${tableNameUpperCase}">
        INSERT INTO ${tableName}
        (#foreach($column in ${columns})#if(${column.columnName} != "id" && ${column.columnNameLowerCase} != "metaDeleted")${column.columnName}#if($velocityCount != ${columns.size()}), #end#end#end )
        VALUES
        (#foreach($column in ${columns})#if(${column.columnName} != "id" && ${column.columnNameLowerCase} != "metaDeleted")#if(${column.columnNameLowerCase} == "metaCreated" || ${column.columnNameLowerCase} == "metaUpdated" )now()#else#{${column.columnNameLowerCase}}#end#if($velocityCount != ${columns.size()}), #end#end#end )
    </insert>

    <!-- delete by ids -->
    <delete id="deleteByKey" parameterType="java.lang.reflect.Array">
        DELETE
        <include refid="SQL_FROM_CAUSE"/>
        WHERE id IN
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- delete by condition -->
    <delete id="deleteByCondition" parameterType="${groupId}.${artifactId}.bean.${tableNameUpperCase}">
        DELETE 
        <include refid="SQL_FROM_CAUSE"/>
        <include refid="SQL_WHERE_CAULSE"/>
    </delete>

    <!-- update by condition -->
    <update id="updateByKey" parameterType="${groupId}.${artifactId}.bean.${tableNameUpperCase}">
        UPDATE ${tableName}
        <include refid="SQL_UPDATE_COLUMNS"/>
        WHERE <![CDATA[ id = #{id} ]]>
    </update>

    <!-- select by key -->
    <select id="selectByKey" parameterType="long" resultType="${groupId}.${artifactId}.bean.${tableNameUpperCase}">
        SELECT 
        <include refid="SQL_COLUMN_LIST"/>
        <include refid="SQL_FROM_CAUSE"/>
        WHERE <![CDATA[ id = #{id} ]]>
    </select>

    <!-- select by condition -->
    <select id="selectByCondition" parameterType="${groupId}.${artifactId}.bean.${tableNameUpperCase}"  resultType="${groupId}.${artifactId}.bean.${tableNameUpperCase}">
        SELECT
        <include refid="SQL_COLUMN_LIST"/>
        <include refid="SQL_FROM_CAUSE"/>
        <include refid="SQL_WHERE_CAULSE"/>
        <include refid="SQL_ORDERBY_CAUSE"/>
    </select>

    <!-- select count by condition -->
    <select id="selectCountByCondition"  parameterType="${groupId}.${artifactId}.bean.${tableNameUpperCase}" resultType="int">
        SELECT COUNT(1) as count
        <include refid="SQL_FROM_CAUSE"/>
        <include refid="SQL_WHERE_CAULSE"/>
    </select>

    <!-- ${customizedCodeAreaStart} -->
$!{userTypedCode}
    <!-- ${customizedCodeAreaEnd} -->
</mapper>
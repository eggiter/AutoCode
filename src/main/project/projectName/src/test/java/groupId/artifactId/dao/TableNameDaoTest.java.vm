package ${groupId}.${artifactId}.dao;

import ${groupId}.${artifactId}.bean.${tableNameUpperCase};
import ${groupId}.${artifactId}.dao.${tableNameUpperCase}Dao;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import java.util.List;

import static org.junit.Assert.*;

/**
 * Test Class For ${tableNameUpperCase}Dao
 * @author ${author}
 */
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration({"classpath:spring/spring-*.xml"})
public class ${tableNameUpperCase}DaoTest {

    @Autowired
    private ${tableNameUpperCase}Dao ${tableNameLowerCase}Dao;

    @Test
    public void testInsertEntry() throws Exception {
        ${tableNameUpperCase} ${tableNameLowerCase} = new ${tableNameUpperCase}();
        ${tableNameLowerCase}.setRemark("inserted");
        int affectedRows = ${tableNameLowerCase}Dao.insertEntry(${tableNameLowerCase});
        assertTrue(affectedRows == 1);
    }

    @Test
    public void testDeleteByKey() throws Exception {
        Long id = 1L;
        int affectedRows = ${tableNameLowerCase}Dao.deleteByKey(id);
        assertTrue(affectedRows == 1);
    }

    @Test
    public void testDeleteByCondition() throws Exception {
        ${tableNameUpperCase} ${tableNameLowerCase} = new ${tableNameUpperCase}();
        ${tableNameLowerCase}.setId(1L);
        int affectedRows = ${tableNameLowerCase}Dao.deleteByCondition(${tableNameLowerCase});
        assertTrue(affectedRows == 1);
    }

    @Test
    public void testUpdateByKey() throws Exception {
        ${tableNameUpperCase} ${tableNameLowerCase} = new ${tableNameUpperCase}();
        ${tableNameLowerCase}.setId(1L);
        ${tableNameLowerCase}.setRemark("updated");
        int affectedRows = ${tableNameLowerCase}Dao.updateByKey(${tableNameLowerCase});
        assertTrue(affectedRows == 1);
    }

    @Test
    public void testSelectByKey() throws Exception {
        ${tableNameUpperCase} ${tableNameLowerCase} = ${tableNameLowerCase}Dao.selectByKey(1L);
        assertTrue(${tableNameLowerCase}.getId() == 1L);
    }

    @Test
    public void testSelectByCondition() throws Exception {
        ${tableNameUpperCase} ${tableNameLowerCase} = new ${tableNameUpperCase}();
        ${tableNameLowerCase}.setId(1L);
        List<${tableNameUpperCase}> ${tableNameLowerCase}List = ${tableNameLowerCase}Dao.selectByCondition(${tableNameLowerCase});
        assertTrue(${tableNameLowerCase}List.size() == 1);
    }

    @Test
    public void testSelectCountByCondition() throws Exception {
        ${tableNameUpperCase} ${tableNameLowerCase} = new ${tableNameUpperCase}();
        ${tableNameLowerCase}.setId(1L);
        int count = ${tableNameLowerCase}Dao.selectCountByCondition(${tableNameLowerCase});
        assertTrue(count == 1);
    }
}